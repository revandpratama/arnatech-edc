// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: core.proto

package core

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CoreBankingServiceClient is the client API for CoreBankingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CoreBankingServiceClient interface {
	AuthorizeTransaction(ctx context.Context, in *AuthorizeTransactionRequest, opts ...grpc.CallOption) (*AuthorizeTransactionResponse, error)
}

type coreBankingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCoreBankingServiceClient(cc grpc.ClientConnInterface) CoreBankingServiceClient {
	return &coreBankingServiceClient{cc}
}

func (c *coreBankingServiceClient) AuthorizeTransaction(ctx context.Context, in *AuthorizeTransactionRequest, opts ...grpc.CallOption) (*AuthorizeTransactionResponse, error) {
	out := new(AuthorizeTransactionResponse)
	err := c.cc.Invoke(ctx, "/core.CoreBankingService/AuthorizeTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreBankingServiceServer is the server API for CoreBankingService service.
// All implementations must embed UnimplementedCoreBankingServiceServer
// for forward compatibility
type CoreBankingServiceServer interface {
	AuthorizeTransaction(context.Context, *AuthorizeTransactionRequest) (*AuthorizeTransactionResponse, error)
	mustEmbedUnimplementedCoreBankingServiceServer()
}

// UnimplementedCoreBankingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCoreBankingServiceServer struct {
}

func (UnimplementedCoreBankingServiceServer) AuthorizeTransaction(context.Context, *AuthorizeTransactionRequest) (*AuthorizeTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuthorizeTransaction not implemented")
}
func (UnimplementedCoreBankingServiceServer) mustEmbedUnimplementedCoreBankingServiceServer() {}

// UnsafeCoreBankingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CoreBankingServiceServer will
// result in compilation errors.
type UnsafeCoreBankingServiceServer interface {
	mustEmbedUnimplementedCoreBankingServiceServer()
}

func RegisterCoreBankingServiceServer(s grpc.ServiceRegistrar, srv CoreBankingServiceServer) {
	s.RegisterService(&CoreBankingService_ServiceDesc, srv)
}

func _CoreBankingService_AuthorizeTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreBankingServiceServer).AuthorizeTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.CoreBankingService/AuthorizeTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreBankingServiceServer).AuthorizeTransaction(ctx, req.(*AuthorizeTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CoreBankingService_ServiceDesc is the grpc.ServiceDesc for CoreBankingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CoreBankingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "core.CoreBankingService",
	HandlerType: (*CoreBankingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthorizeTransaction",
			Handler:    _CoreBankingService_AuthorizeTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core.proto",
}
