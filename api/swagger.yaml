openapi: 3.0.0
info:
  title: EDC Service API
  description: API for managing Electronic Data Capture services.
  version: 1.0.0
servers:
  - url: https://revand.test.bri-edc.arnatechnology.com/
    description: Cloud server
  - url: http://localhost:8080
    description: Development server

paths:
  /health:
    get:
      summary: Health Check
      description: Returns the operational status of the service.
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  /api/v1/auth:
    post:
      summary: Get Authentication Token
      description: Authenticates a terminal and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid request body or validation error
        '500':
          description: Internal server error

  /api/v1/transactions/sale:
    post:
      summary: Create a Sale Transaction
      description: Processes a new sale transaction. Requires authentication.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleRequest'
      responses:
        '200':
          description: Transaction processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleResponse'
        '400':
          description: Invalid request body or validation error
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/v1/transactions/settlement:
    post:
      summary: Create a Settlement
      description: Creates a settlement batch from a list of transaction IDs. Requires authentication.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementRequest'
            example:
              - merchant_id: "MCH123"
                terminal_id: "T01"
                amount: 1
                card_number: "411111******1111"
                timestamp: "2025-10-05T12:50:00Z"
              - merchant_id: "MCH123"
                terminal_id: "T01"
                amount: 1000
                card_number: "411111******1111"
                timestamp: "2025-10-05T12:50:00Z"
      responses:
        '200':
          description: Settlement created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettlementResponse'
        '400':
          description: Invalid request body or validation error
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthRequest:
      type: object
      properties:
        terminal_id:
          type: string
          example: "T01"
        secret_key:
          type: string
          example: "secret-key-123"
      required:
        - terminal_id
        - secret_key

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        token_type:
          type: string
          example: "Bearer"

    SaleRequest:
      type: object
      properties:
        merchant_id:
          type: string
          example: "MCH123"
        terminal_id:
          type: string
          example: "T01"
        amount:
          type: integer
          format: int64
          example: 1
        card_number:
          type: string
          example: "411111******1111"
        timestamp:
          type: string
          format: date-time
          example: "2025-10-05T12:50:00Z"
      required:
        - merchant_id
        - terminal_id
        - amount
        - card_number
        - timestamp

    SaleResponse:
      type: object
      properties:
        transaction_id:
          type: string
          example: "TRX17282..."
        status:
          type: string
          example: "approved"
        message:
          type: string
          example: "Transaction authorized"

    SettlementRequest:
      type: object
      properties:
        transaction_ids:
          type: array
          items:
           $ref: '#/components/schemas/SaleRequest'

    SettlementResponse:
      type: object
      properties:
        batch_id:
          type: string
          example: "BATCH17282..."
        total_count:
          type: integer
          example: 10
        approved:
          type: integer
          example: 8
        declined:
          type: integer
          example: 2
        total_amount:
          type: integer
          format: int64
          example: 1200000